name: Jandex

on:
  push:
    branches:
    - main
    paths-ignore:
    - '.gitattributes'
    - '.gitignore'
    - 'LICENSE.txt'
    - 'README.md'
  pull_request:
    paths-ignore:
    - '.gitattributes'
    - '.gitignore'
    - 'LICENSE.txt'
    - 'README.md'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        java:
        # we want: all LTS versions (that we care about), latest GA, upcoming
        - 8
        - 11
        - 17
        - 21
        - 24
        compiler:
        - javac
        - ecj
        parameters:
        - true
        - false
        os:
        - ubuntu-latest
        - windows-latest
        exclude:
        - java: 8
          compiler: ecj
        - java: 11
          compiler: ecj
    runs-on: ${{ matrix.os }}
    name: "JDK ${{ matrix.java }}, ${{ matrix.compiler}}, params: ${{ matrix.parameters }}, ${{ matrix.os }}"
    steps:
    - name: Checkout
      uses: actions/checkout@v5

    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v5
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}

    - name: Set up Maven
      uses: stCarolas/setup-maven@v5
      with:
        maven-version: 3.9.7

    - name: Build with Maven
      shell: bash
      run: mvn -s .github/maven-ci-settings.xml -B verify --file pom.xml -Dcompiler=${{ matrix.compiler }} -Dparameters=${{ matrix.parameters }}

  calcite-regression:
    strategy:
      matrix:
        # javac 8 and 11 might produce slightly different bytecode
        java:
        - 8
        - 11
        - 17
    runs-on: ubuntu-latest
    name: 'Calcite regression test (JDK ${{ matrix.java }})'
    steps:
    - name: Checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: 50

    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v5
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}

    - name: Set up Maven
      uses: stCarolas/setup-maven@v5
      with:
        maven-version: 3.8.7

    - name: Build with Maven
      run: |
        # Set 1.0.0-dev version to ensure it will be used when building Calcite later
        mvn -s .github/maven-ci-settings.xml -B versions:set -DnewVersion=1.0.0-dev-SNAPSHOT
        mvn -s .github/maven-ci-settings.xml -B versions:commit
        mvn -s .github/maven-ci-settings.xml -B install -DskipTests --file pom.xml

    - name: Clone Calcite
      run: |
        git clone --branch main --depth 100 https://github.com/apache/calcite.git ../calcite
        echo 'allprojects { plugins.withType<JavaPlugin> { dependencies { "jandexClasspath"("io.smallrye:jandex:1.0.0-dev-SNAPSHOT") } } }' >> ../calcite/build.gradle.kts

    - name: Verify Calcite bytecode
      uses: burrunan/gradle-cache-action@v3
      with:
        job-id: calcite-jdk${{ matrix.java-version }}
        build-root-directory: ../calcite
        arguments: --scan --no-parallel --no-daemon --continue jandex
        properties: |
          enableMavenLocal=true
          jandex.version=1.0.0-dev-SNAPSHOT
          skipJandex=false
        maven-local-ignore-paths: |
          org/jboss/jandex/
          io/smallrye/jandex/

    - name: Prepare failure archive (if run failed)
      if: failure()
      shell: bash
      run: |
       pwd 
       tar -czf calcite-work.tgz ../calcite 

    - name: Upload failure archive (if run failed)
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: calcite-work
        path: calcite-work.tgz
